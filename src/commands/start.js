const START_USERS_FILE = "start_users.json";
const fs = require("fs");

function handleStart(msg, bot) {
  const welcomeMessage = `
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å YouTube! üé•

–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Å YouTube. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è –∑–∞–≥—Ä—É–∂—É –µ–≥–æ –¥–ª—è –≤–∞—Å.

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ <b>URL –≤–∏–¥–µ–æ —Å YouTube</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
  `;

  saveStartUser(msg.from.id);

  bot.sendMessage(msg.chat.id, welcomeMessage, { parse_mode: "HTML" });
}

module.exports = { handleStart };

function saveStartUser(userId) {
  try {
    // Read existing users
    let users = [];
    try {
      const data = fs.readFileSync(START_USERS_FILE);
      users = JSON.parse(data);
    } catch {
      // File doesn't exist, start with empty array
    }

    // Add new user with current date
    const today = new Date();
    const dateStr = `${today.getDate()}.${
      today.getMonth() + 1
    }.${today.getFullYear()}`;

    // Check if user already exists
    if (!users.some((user) => user.id === userId)) {
      users.push({
        id: userId,
        date: dateStr,
      });

      // Save updated list
      fs.writeFileSync(START_USERS_FILE, JSON.stringify(users, null, 2));
    }
  } catch (error) {
    console.error("Error saving start user:", error);
  }
}
